name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  backend-build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend
    name: Backend Build and Tests

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Initialize db
        run: docker-compose -f "../docker-compose.yml" up -d --build db

      - name: Config basic setup
        run: cp .env_example .env

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm run test

  backend-lint:
    name: Code linting
    defaults:
      run:
        working-directory: ./backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint

  frontend-build:
    defaults:
      run:
        working-directory: ./frontend
    name: Frontend Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run build
